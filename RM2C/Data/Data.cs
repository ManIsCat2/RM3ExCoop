using System.Collections.Generic;

namespace RM2ExCoop.RM2C
{
    internal partial class Data
    {
        /* Levels Id/Name */
        public static readonly Dictionary<int, string> Num2Name = new()
        {
            { 6, "castle_inside" },
            { 4, "bbh" },
            { 5, "ccm" },
            { 7, "hmc" },
            { 8, "ssl" },
            { 9, "bob" },
            { 10, "sl" },
            { 11, "wdw" },
            { 12, "jrb" },
            { 13, "thi" },
            { 14, "ttc" },
            { 15, "rr" },
            { 16, "castle_grounds" },
            { 17, "bitdw" },
            { 18, "vcutm" },
            { 19, "bitfs" },
            { 20, "sa" },
            { 21, "bits" },
            { 22, "lll" },
            { 23, "ddd" },
            { 24, "wf" },
            { 25, "ending" },
            { 26, "castle_courtyard" },
            { 27, "pss" },
            { 28, "cotmc" },
            { 29, "totwc" },
            { 30, "bowser_1" },
            { 31, "wmotr" },
            { 33, "bowser_2" },
            { 34, "bowser_3" },
            { 36, "ttm" },
        };

        /* ASCII Special chars Text Map */
        public static readonly Dictionary<byte, string> TextMap = new()
        {
            { 62, "'" },
            { 63, "." },
            { 80, "^" },
            { 81, "|" },
            { 82, "<" },
            { 83, ">" },
            { 84, "[A]" },
            { 85, "[B]" },
            { 86, "[C]" },
            { 87, "[Z]" },
            { 88, "[R]" },
            { 111, "," },
            { 158, " " },
            { 159, "-" },
            { 208, "/" },
            { 209, "the" },
            { 210, "you" },
            { 224, "[%]" },
            { 225, "(" },
            { 226, ")(" },
            { 227, ")" },
            //{ 228, "+" },
            { 228, "↔" },
            { 229, "&" },
            { 230, ":" },
            { 240, "゛" },
            { 241, "゜" },
            { 242, "!" },
            { 243, "%" },
            { 244, "?" },
            { 245, "『" },
            { 246, "』" },
            { 247, "~" },
            { 248, "…" },
            { 249, "$" },
            { 250, "★" },
            { 251, "×" },
            { 252, "・" },
            { 253, "☆" },
            { 254, "\\n\\\n" },
        };

        /* Course Names */
        public static readonly Dictionary<int, string> CourseNames = new()
        {
            { 0, "COURSE_BOB" },
            { 1, "COURSE_WF" },
            { 2, "COURSE_JRB" },
            { 3, "COURSE_CCM" },
            { 4, "COURSE_BBH" },
            { 5, "COURSE_HMC" },
            { 6, "COURSE_LLL" },
            { 7, "COURSE_SSL" },
            { 8, "COURSE_DDD" },
            { 9, "COURSE_SL" },
            { 10, "COURSE_WDW" },
            { 11, "COURSE_TTM" },
            { 12, "COURSE_THI" },
            { 13, "COURSE_TTC" },
            { 14, "COURSE_RR" },
            { 15, "COURSE_BITDW" },
            { 16, "COURSE_BITFS" },
            { 17, "COURSE_BITS" },
            { 18, "COURSE_PSS" },
            { 19, "COURSE_COTMC" },
            { 20, "COURSE_TOTWC" },
            { 21, "COURSE_VCUTM" },
            { 22, "COURSE_WMOTR" },
            { 23, "COURSE_SA" },
            { 24, "COURSE_CAKE_END" }
        };

        /* Trajectories pointers */
        public static readonly Dictionary<string, int> Trajectories = new()
        {
            { "KoopaBoB", 0xEd864 },
            { "KoopaTHI", 0xEd874 },
            { "rr_seg7_trajectory_0702EC3C_RM2C", 0xED9DC },
            { "rr_seg7_trajectory_0702ECC0_RM2C", 0xED9E0 },
            { "ccm_seg7_trajectory_0701669C_RM2C", 0xED9E4 },
            { "bitfs_seg7_trajectory_070159AC_RM2C", 0xED9E8 },
            { "hmc_seg7_trajectory_0702B86C_RM2C", 0xED9EC },
            { "lll_seg7_trajectory_0702856C_RM2C", 0xED9F0 },
            { "lll_seg7_trajectory_07028660_RM2C", 0xED9F4 },
            { "rr_seg7_trajectory_0702ED9C_RM2C", 0xED9F8 },
            { "rr_seg7_trajectory_0702EEE0_RM2C", 0xED9FC },
            { "ccm_seg7_trajectory_penguin_race_RM2C", 0xCCA6C }, // This one is loaded via asm
        };

        /* Star Positions pointers */
        public static readonly Dictionary<string, int[]> KoopaStarPositions = new()
        {
            { "KoopaBoB", new int[] { 0xED868, 0xED86A, 0xED86C } },
            { "KoopaTHI", new int[] { 0xED878, 0xED87A, 0xED87C } },
        };

        public static readonly Dictionary<string, int[]> StarPositions = new()
        {
            { "KingBobOmb", new int[] { 0x1204f00, 0x1204f00 } },
            { "KingWhomp", new int[] { 0x1204f10, 0x1204f10 } },
            { "Eyerock", new int[] { 0x1204f20, 0x1204f20 } },
            { "BigBully", new int[] { 0x1204f30, 0x1204f30 } }, // Actually BigBullyTrio
            { "ChillBully", new int[] { 0x1204f40, 0x1204f40 } },
            { "BigPiranhas", new int[] { 0x1204f50, 0x1204f50 } },
            { "TuxieMother", new int[] { 0x1204f60, 0x1204f60 } },
            { "Wiggler", new int[] { 0x1204f70, 0x1204f70 } },
            { "PssSlide", new int[] { 0x1204f80, 0x1204f80 } },
            { "RacingPenguin", new int[] { 0x1204f90, 0x1204f90 } },
            { "TreasureChest", new int[] { 0x1204fA0, 0x1204fA0 } },
            { "GhostHuntBoo", new int[] { 0x1204fAC, 0x1204fAC } },
            { "Klepto", new int[] { 0x1204fC4, 0x1204fC4 } },
            { "MerryGoRound", new int[] { 0x1204fB8, 0x1204fB8 } },
            { "MrI", new int[] { 0x1204fD0, 0x1204fD0 } },
            { "BalconyBoo", new int[] { 0x1204fDC, 0x1204fD8 } },
            { "BigBullyTrio", new int[] { 0x1204fE4, 0x1204fE4 } }, // Actually BigBully
        };

        /* Tweaks */
        public static readonly List<Tweak> Tweaks = new()
        {
            new TweakByte("MARIO_START_LIVES", TweakType.INHERIT, 0x1001B),
            new TweakUint("INFINITE_LIVES", TweakType.INHERIT, 0x41918),
            new TweakByte("START_LEVEL", TweakType.INHERIT, 0x6D6B),
            new TweakUshort("COINS_REQ_COINSTAR", TweakType.INHERIT, 0x8BBE),
            new TweakUshort("REDS_REQ", TweakType. INHERIT, 0xADDDE),
            new TweakUshort("EXIT_COURSE", TweakType.INHERIT, 0x666A, 0x666E, 0x6672),
            new TweakByte("FALL_DAMAGE", TweakType.INHERIT, 0x252F5),
            new TweakByte("STAR_MILESTONES", TweakType.INHERIT , 0xE8B54, 0xE8B55, 0xE8B56, 0xE8B57, 0xE8B58, 0xE8B59),
            new TweakUshort("KING_BOMB_FVEL", TweakType.FLOATUPPER, 0x624DA),
            new TweakUshort("KING_BOMB_YAWVEL", TweakType.INHERIT, 0x624FA),
            new TweakUshort("KING_BOMB_HEALTH", TweakType.INHERIT, 0x622DA),
            new TweakUshort("KING_WHOMP_HEALTH", TweakType.INHERIT, 0x81E32),
            new TweakUshort("KOOPA_SPEED_RACE_END", TweakType.FLOATUPPER, 0xB81D6),
            new TweakUshort("KOOPA_SPEED_THI", TweakType.FLOATUPPER, 0xB8202),
            new TweakUshort("KOOPA_SPEED_BOB", TweakType.FLOATUPPER, 0xB821A),
            new TweakByte("MIPS1_STAR_REQ", TweakType.INHERIT, 0xB34CB),
            new TweakByte("MIPS2_STAR_REQ", TweakType.INHERIT, 0xB3523),
            new TweakUshort("TOAD_STAR_1_REQUIREMENT", TweakType.INHERIT, 0x3199A),
            new TweakUshort("TOAD_STAR_2_REQUIREMENT", TweakType.INHERIT, 0x319CE),
            new TweakUshort("TOAD_STAR_3_REQUIREMENT", TweakType.INHERIT, 0x31A02),
            new TweakUshort("SLIDE_TIME", TweakType.INHERIT, 0xB7A6),
            new TweakUshort("MC_TIME", TweakType.DOUBLE, 0xAC0A),
            new TweakUshort("WC_TIME", TweakType.DOUBLE, 0xAC22),
            new TweakUshort("VC_TIME", TweakType.DOUBLE, 0xABF2),
            new TweakUshort("MC_LEVEL_TIME", TweakType.DOUBLE, 0x4A5E),
            new TweakUshort("WC_LEVEL_TIME", TweakType.DOUBLE, 0x4A7A),
            new TweakUshort("VC_LEVEL_TIME", TweakType.DOUBLE, 0x4A96),
            new TweakUshort("HUD_LIVES_MARIO_X", TweakType.GFXRECTLEFT, 0x9E756),
            new TweakUshort("HUD_LIVES_MARIO_Y", TweakType.INHERIT, 0x9E75E),
            new TweakUshort("HUD_LIVES_CROSS_X", TweakType.GFXRECTLEFT, 0x9E76A),
            new TweakUshort("HUD_LIVES_CROSS_Y", TweakType.INHERIT, 0x9E772),
            new TweakUshort("HUD_LIVES_NUM_X", TweakType.GFXRECTLEFT, 0x9E786),
            new TweakUshort("HUD_LIVES_NUM_Y", TweakType.INHERIT, 0x9E78E),
            new TweakUshort("HUD_COINS_X", TweakType.GFXRECTLEFT, 0x9E7BA),
            new TweakUshort("HUD_COINS_Y", TweakType.INHERIT, 0x9E7C2),
            new TweakUshort("HUD_COINS_CROSS_X", TweakType.GFXRECTLEFT, 0x9E7CE),
            new TweakUshort("HUD_COINS_CROSS_Y", TweakType.INHERIT, 0x9E7D6),
            new TweakUshort("HUD_COINS_NUM_X", TweakType.GFXRECTLEFT, 0x9E7EA),
            new TweakUshort("HUD_COINS_NUM_Y", TweakType.INHERIT, 0x9E7F2),
            new TweakUshort("HUD_STARS_X", TweakType.GFXRECTRIGHT, 0x9E86E),
            new TweakUshort("HUD_STARS_Y", TweakType.INHERIT, 0x9E876),
            new TweakUshort("HUD_STARS_CROSS_X", TweakType.GFXRECTRIGHT, 0x9E892),
            new TweakUshort("HUD_STARS_CROSS_Y", TweakType.INHERIT, 0x9E89A),
            new TweakUshort("HUD_STARS_NUM_X", TweakType.GFXRECTRIGHT, 0x9E8BA),
            new TweakUshort("HUD_STARS_NUM_Y", TweakType.INHERIT, 0x9E8CA),
            new TweakUshort("HUD_TIME_X", TweakType.GFXRECTRIGHT, 0x9EA22),
            new TweakUshort("HUD_TIME_Y", TweakType.INHERIT, 0x9EA2A),
            new TweakUshort("HUD_TIME_MIN_X", TweakType.GFXRECTRIGHT, 0x9EA36),
            new TweakUshort("HUD_TIME_MIN_A_X", TweakType.GFXRECTRIGHT, 0x9EAAE),
            new TweakUshort("HUD_TIME_SEC_X", TweakType.GFXRECTRIGHT, 0x9EA4E),
            new TweakUshort("HUD_TIME_SEC_AA_X", TweakType.GFXRECTRIGHT, 0x9EAC2),
            new TweakUshort("HUD_TIME_FSEC_X", TweakType.GFXRECTRIGHT, 0x9EA66),
            new TweakUshort("HUD_TIME_A_Y", TweakType.INHERIT, 0x9EAB2),
            new TweakUshort("POWER_X", TweakType.INHERIT, 0xED5F2),
            new TweakUshort("POWER_Y", TweakType.INHERIT, 0xED5F4),
            new TweakByte("SHOW_STARS", TweakType.INHERIT, 0x9EDE1),
            new TweakByte("SHOW_COINS", TweakType.INHERIT, 0x9EDc9),
            new TweakByte("SHOW_LIVES", TweakType.INHERIT, 0x9EDB1),
            new TweakByte("SHOW_CAM", TweakType.INHERIT, 0x9EE19),
            new TweakByte("SHOW_TIME", TweakType.INHERIT, 0x9EE31),
        };

        // Actions to take based on script cmds
        public static Dictionary<int, LevelCommands.LevelCommand> Jumps = new()
        {
            { 0x00, LevelCommands.LoadRawJumpPush },
            { 0x01, LevelCommands.LoadRawJump },
            { 0x02, LevelCommands.Exit },
            { 0x05, LevelCommands.JumpRaw },
            { 0x06, LevelCommands.JumpPush },
            { 0x07, LevelCommands.Pop },
            { 0x0B, LevelCommands.Nop }, // CondPop
            { 0x0C, LevelCommands.CondJump },
            { 0x13, LevelCommands.DoNothing }, // SetLevel
            { 0x16, LevelCommands.LoadAsm },
            { 0x17, LevelCommands.LoadData },
            { 0x18, LevelCommands.Nop}, // LoadMio0
            { 0x1A, LevelCommands.LoadData }, // LoadMio0Tex
            { 0x1F, LevelCommands.StartArea },
            { 0x20, LevelCommands.EndArea },
            { 0x21, LevelCommands.LoadPolyF3d },
            { 0x22, LevelCommands.LoadPolyGeo },
            { 0x24, LevelCommands.PlaceObject },
            { 0x25, LevelCommands.DoNothing }, // PlaceMario
            { 0x26, LevelCommands.ConnectWarp },
            { 0x27, LevelCommands.PaintingWarp },
            { 0x28, LevelCommands.InstantWarp },
            { 0x2B, LevelCommands.SetMarioDefault },
            { 0x2E, LevelCommands.LoadCol },
            { 0x2F, LevelCommands.DoNothing }, // LoadRoom
            { 0x30, LevelCommands.DoNothing }, // SetDialog
            { 0x31, LevelCommands.SetTerrain },
            { 0x36, LevelCommands.SetMusic },
            { 0x37, LevelCommands.SetMusic2 },
            { 0x39, LevelCommands.MacroObjects },
        };

        // MOP is the devil and I hate it, but it is common enough to dedicate
        // hardcoded addresses to, well thats the only way to know where it is though
        // key=modelID,bhv value=Name,model RAMaddr
        public static Dictionary<(int, int), (string, int?)> MOPObjAddr = new()
        {
            { new(0xF0,0x130050D0), new("FlipBlock_MOP",0x0302272C) },
            { new(0x2F,0x13000278), new("Flipswap_Platform_MOP",0x005F9AC0) },
            { new(0x2A,0x130005D8), new("Flipswitch_Panel_MOP",0x005F9FE0) },
            { new(0x2B,0x13000CFC), new("Green_Switchboard_MOP",0x005FD8B0) },
            { new(0x2D,0x13000D24), new("Moving_Rotating_Block_MOP",0x00603670) },
            { new(0x2E,0x13000D50), new("Checkpoint_Flag_MOP",0x00606660) },
            { new(0,0x13000D50), new("Checkpoint_Flag_MOP", 0x00606660) }, // repeated because its an often enough case
            { new (0x7B,0x13000174), new ("Noteblock_MOP",0x0301DBF8) },
            { new (0xCF,0x1300512C), new ("PSwitch_MOP",0x0F0004CC) },
            { new(0x99, 0x1300064C), new("SandBlock_MOP", 0x030225E4) },
            { new(0x9B, 0x13004218), new("Shell_1_MOP", 0x0F000ADC) },
            { new(0x9D, 0x13004218), new("Shell_2_MOP", 0x0F000B08) },
            { new(0x98, 0x13000624), new("Shrink_Platform_MOP", 0x030212F4) },
            { new(0x92, 0x130005B4), new("Spring_MOP", 0x0301FC98) },
            { new(0xF2, 0x13003AE0), new("Switchblock_Switch_MOP", 0x03022708) },
            { new(0xF1, 0x13004EA0), new("Switchblock_MOP", 0x030226D4) },
            // { new(0xB5,0x13001608), new("Trampoline_MOP",0x0C000000) }, //this is included in repo already
            { new(0x54, 0x130023D0), new("Beta_Blarrg_MOP", 0x0C000224) },
            { new(0, 0x130002A0), new("Flipswitch_Panel_StarSpawn_MOP", null) },
            { new(0, 0x13005104), new("Jukebox_MOP", null) },
            { new(0, 0x130050B4), new("Emitter_MOP", null) },
        };

        public static Dictionary<int, string> MacroNames = new()
        {
            { 31, "macro_yellow_coin" },
            { 32, "macro_yellow_coin_2" },
            { 33, "macro_moving_blue_coin" },
            { 34, "macro_sliding_blue_coin" },
            { 35, "macro_red_coin" },
            { 36, "macro_empty_5" },
            { 37, "macro_coin_line_horizontal" },
            { 38, "macro_coin_ring_horizontal" },
            { 39, "macro_coin_arrow" },
            { 40, "macro_coin_line_horizontal_flying" },
            { 41, "macro_coin_line_vertical" },
            { 42, "macro_coin_ring_horizontal_flying" },
            { 43, "macro_coin_ring_vertical" },
            { 44, "macro_coin_arrow_flying" },
            { 45, "macro_hidden_star_trigger" },
            { 46, "macro_empty_15" },
            { 47, "macro_empty_16" },
            { 48, "macro_empty_17" },
            { 49, "macro_empty_18" },
            { 50, "macro_empty_19" },
            { 51, "macro_fake_star" },
            { 52, "macro_wooden_signpost" },
            { 53, "macro_cannon_closed" },
            { 54, "macro_bobomb_buddy_opens_cannon" },
            { 55, "macro_butterfly" },
            { 56, "macro_bouncing_fireball_copy" },
            { 57, "macro_fish_group_3" },
            { 58, "macro_fish_group" },
            { 59, "macro_unknown_28" },
            { 60, "macro_hidden_1up_in_pole" },
            { 61, "macro_huge_goomba" },
            { 62, "macro_tiny_goomba" },
            { 63, "macro_goomba_triplet_spawner" },
            { 64, "macro_goomba_quintuplet_spawner" },
            { 65, "macro_sign_on_wall" },
            { 66, "macro_chuckya" },
            { 67, "macro_cannon_open" },
            { 68, "macro_goomba" },
            { 69, "macro_homing_amp" },
            { 70, "macro_circling_amp" },
            { 71, "macro_unknown_40" },
            { 72, "macro_unknown_41" },
            { 73, "macro_free_bowling_ball" },
            { 74, "macro_snufit" },
            { 75, "macro_recovery_heart" },
            { 76, "macro_1up_sliding" },
            { 77, "macro_1up" },
            { 78, "macro_1up_jump_on_approach" },
            { 79, "macro_hidden_1up" },
            { 80, "macro_hidden_1up_trigger" },
            { 81, "macro_1up_2" },
            { 82, "macro_1up_3" },
            { 83, "macro_empty_52" },
            { 84, "macro_blue_coin_switch" },
            { 85, "macro_hidden_blue_coin" },
            { 86, "macro_wing_cap_switch" },
            { 87, "macro_metal_cap_switch" },
            { 88, "macro_vanish_cap_switch" },
            { 89, "macro_yellow_cap_switch" },
            { 90, "macro_unknown_59" },
            { 91, "macro_box_wing_cap" },
            { 92, "macro_box_metal_cap" },
            { 93, "macro_box_vanish_cap" },
            { 94, "macro_box_koopa_shell" },
            { 95, "macro_box_one_coin" },
            { 96, "macro_box_three_coins" },
            { 97, "macro_box_ten_coins" },
            { 98, "macro_box_1up" },
            { 99, "macro_box_star_1" },
            { 100, "macro_breakable_box_no_coins" },
            { 101, "macro_breakable_box_three_coins" },
            { 102, "macro_pushable_metal_box" },
            { 103, "macro_breakable_box_small" },
            { 104, "macro_floor_switch_hidden_objects" },
            { 105, "macro_hidden_box" },
            { 106, "macro_hidden_object_2" },
            { 107, "macro_hidden_object_3" },
            { 108, "macro_breakable_box_giant" },
            { 109, "macro_koopa_shell_underwater" },
            { 110, "macro_box_1up_running_away" },
            { 111, "macro_empty_80" },
            { 112, "macro_bullet_bill_cannon" },
            { 113, "macro_heave_ho" },
            { 114, "macro_empty_83" },
            { 115, "macro_thwomp" },
            { 116, "macro_fire_spitter" },
            { 117, "macro_fire_fly_guy" },
            { 118, "macro_jumping_box" },
            { 119, "macro_butterfly_triplet" },
            { 120, "macro_butterfly_triplet_2" },
            { 121, "macro_empty_90" },
            { 122, "macro_empty_91" },
            { 123, "macro_empty_92" },
            { 124, "macro_bully" },
            { 125, "macro_bully_2" },
            { 126, "macro_empty_95" },
            { 127, "macro_unknown_96" },
            { 128, "macro_bouncing_fireball" },
            { 129, "macro_flamethrower" },
            { 130, "macro_empty_99" },
            { 131, "macro_empty_100" },
            { 132, "macro_empty_101" },
            { 133, "macro_empty_102" },
            { 134, "macro_empty_103" },
            { 135, "macro_empty_104" },
            { 136, "macro_empty_105" },
            { 137, "macro_wooden_post" },
            { 138, "macro_water_bomb_spawner" },
            { 139, "macro_enemy_lakitu" },
            { 140, "macro_bob_koopa_the_quick" },
            { 141, "macro_koopa_race_endpoint" },
            { 142, "macro_bobomb" },
            { 143, "macro_water_bomb_cannon_copy" },
            { 144, "macro_bobomb_buddy_opens_cannon_copy" },
            { 145, "macro_water_bomb_cannon" },
            { 146, "macro_bobomb_still" },
            { 147, "macro_empty_116" },
            { 148, "macro_empty_117" },
            { 149, "macro_empty_118" },
            { 150, "macro_empty_119" },
            { 151, "macro_empty_120" },
            { 152, "macro_empty_121" },
            { 153, "macro_empty_122" },
            { 154, "macro_unknown_123" },
            { 155, "macro_empty_124" },
            { 156, "macro_unagi" },
            { 157, "macro_sushi" },
            { 158, "macro_empty_127" },
            { 159, "macro_empty_128" },
            { 160, "macro_empty_129" },
            { 161, "macro_empty_130" },
            { 162, "macro_empty_131" },
            { 163, "macro_empty_132" },
            { 164, "macro_empty_133" },
            { 165, "macro_empty_134" },
            { 166, "macro_empty_135" },
            { 167, "macro_empty_136" },
            { 168, "macro_unknown_137" },
            { 169, "macro_tornado" },
            { 170, "macro_pokey" },
            { 171, "macro_pokey_copy" },
            { 172, "macro_tox_box" },
            { 173, "macro_empty_142" },
            { 174, "macro_empty_143" },
            { 175, "macro_empty_144" },
            { 176, "macro_empty_145" },
            { 177, "macro_empty_146" },
            { 178, "macro_empty_147" },
            { 179, "macro_empty_148" },
            { 180, "macro_empty_149" },
            { 181, "macro_empty_150" },
            { 182, "macro_monty_mole_2" },
            { 183, "macro_monty_mole" },
            { 184, "macro_monty_mole_hole" },
            { 185, "macro_fly_guy" },
            { 186, "macro_empty_155" },
            { 187, "macro_wiggler" },
            { 188, "macro_empty_157" },
            { 189, "macro_empty_158" },
            { 190, "macro_empty_159" },
            { 191, "macro_empty_160" },
            { 192, "macro_empty_161" },
            { 193, "macro_empty_162" },
            { 194, "macro_empty_163" },
            { 195, "macro_empty_164" },
            { 196, "macro_spindrift" },
            { 197, "macro_mr_blizzard" },
            { 198, "macro_mr_blizzard_copy" },
            { 199, "macro_empty_168" },
            { 200, "macro_small_penguin" },
            { 201, "macro_tuxies_mother" },
            { 202, "macro_tuxies_mother_copy" },
            { 203, "macro_mr_blizzard_2" },
            { 204, "macro_empty_173" },
            { 205, "macro_empty_174" },
            { 206, "macro_empty_175" },
            { 207, "macro_empty_176" },
            { 208, "macro_empty_177" },
            { 209, "macro_empty_178" },
            { 210, "macro_empty_179" },
            { 211, "macro_empty_180" },
            { 212, "macro_empty_181" },
            { 213, "macro_empty_182" },
            { 214, "macro_empty_183" },
            { 215, "macro_empty_184" },
            { 216, "macro_empty_185" },
            { 217, "macro_empty_186" },
            { 218, "macro_empty_187" },
            { 219, "macro_empty_188" },
            { 220, "macro_haunted_chair_copy" },
            { 221, "macro_haunted_chair" },
            { 222, "macro_haunted_chair_copy2" },
            { 223, "macro_boo" },
            { 224, "macro_boo_copy" },
            { 225, "macro_boo_group" },
            { 226, "macro_boo_with_cage" },
            { 227, "macro_beta_key" },
            { 228, "macro_empty_197" },
            { 229, "macro_empty_198" },
            { 230, "macro_empty_199" },
            { 231, "macro_empty_200" },
            { 232, "macro_empty_201" },
            { 233, "macro_empty_202" },
            { 234, "macro_empty_203" },
            { 235, "macro_empty_204" },
            { 236, "macro_empty_205" },
            { 237, "macro_empty_206" },
            { 238, "macro_empty_207" },
            { 239, "macro_empty_208" },
            { 240, "macro_empty_209" },
            { 241, "macro_empty_210" },
            { 242, "macro_empty_211" },
            { 243, "macro_empty_212" },
            { 244, "macro_empty_213" },
            { 245, "macro_empty_214" },
            { 246, "macro_empty_215" },
            { 247, "macro_empty_216" },
            { 248, "macro_empty_217" },
            { 249, "macro_empty_218" },
            { 250, "macro_empty_219" },
            { 251, "macro_empty_220" },
            { 252, "macro_empty_221" },
            { 253, "macro_empty_222" },
            { 254, "macro_empty_223" },
            { 255, "macro_empty_224" },
            { 256, "macro_empty_225" },
            { 257, "macro_empty_226" },
            { 258, "macro_empty_227" },
            { 259, "macro_empty_228" },
            { 260, "macro_empty_229" },
            { 261, "macro_empty_230" },
            { 262, "macro_empty_231" },
            { 263, "macro_empty_232" },
            { 264, "macro_empty_233" },
            { 265, "macro_chirp_chirp" },
            { 266, "macro_seaweed_bundle" },
            { 267, "macro_beta_chest" },
            { 268, "macro_water_mine" },
            { 269, "macro_fish_group_4" },
            { 270, "macro_fish_group_2" },
            { 271, "macro_jet_stream_ring_spawner" },
            { 272, "macro_jet_stream_ring_spawner_copy" },
            { 273, "macro_skeeter" },
            { 274, "macro_clam_shell" },
            { 275, "macro_empty_244" },
            { 276, "macro_empty_245" },
            { 277, "macro_empty_246" },
            { 278, "macro_empty_247" },
            { 279, "macro_empty_248" },
            { 280, "macro_empty_249" },
            { 281, "macro_empty_250" },
            { 282, "macro_ukiki" },
            { 283, "macro_ukiki_2" },
            { 284, "macro_piranha_plant" },
            { 285, "macro_empty_254" },
            { 286, "macro_whomp" },
            { 287, "macro_chain_chomp" },
            { 288, "macro_empty_257" },
            { 289, "macro_koopa" },
            { 290, "macro_koopa_shellless" },
            { 291, "macro_wooden_post_copy" },
            { 292, "macro_fire_piranha_plant" },
            { 293, "macro_fire_piranha_plant_2" },
            { 294, "macro_thi_koopa_the_quick" },
            { 295, "macro_empty_264" },
            { 296, "macro_empty_265" },
            { 297, "macro_empty_266" },
            { 298, "macro_empty_267" },
            { 299, "macro_empty_268" },
            { 300, "macro_empty_269" },
            { 301, "macro_empty_270" },
            { 302, "macro_empty_271" },
            { 303, "macro_empty_272" },
            { 304, "macro_empty_273" },
            { 305, "macro_empty_274" },
            { 306, "macro_empty_275" },
            { 307, "macro_empty_276" },
            { 308, "macro_empty_277" },
            { 309, "macro_empty_278" },
            { 310, "macro_empty_279" },
            { 311, "macro_empty_280" },
            { 312, "macro_moneybag" },
            { 313, "macro_empty_282" },
            { 314, "macro_empty_283" },
            { 315, "macro_empty_284" },
            { 316, "macro_empty_285" },
            { 317, "macro_empty_286" },
            { 318, "macro_empty_287" },
            { 319, "macro_empty_288" },
            { 320, "macro_swoop" },
            { 321, "macro_swoop_2" },
            { 322, "macro_mr_i" },
            { 323, "macro_scuttlebug_spawner" },
            { 324, "macro_scuttlebug" },
            { 325, "macro_empty_294" },
            { 326, "macro_empty_295" },
            { 327, "macro_empty_296" },
            { 328, "macro_empty_297" },
            { 329, "macro_empty_298" },
            { 330, "macro_empty_299" },
            { 331, "macro_empty_300" },
            { 332, "macro_empty_301" },
            { 333, "macro_empty_302" },
            { 334, "macro_unknown_303" },
            { 335, "macro_empty_304" },
            { 336, "macro_empty_305" },
            { 337, "macro_empty_306" },
            { 338, "macro_empty_307" },
            { 339, "macro_empty_308" },
            { 340, "macro_empty_309" },
            { 341, "macro_empty_310" },
            { 342, "macro_empty_311" },
            { 343, "macro_empty_312" },
            { 344, "macro_ttc_rotating_cube" },
            { 345, "macro_ttc_rotating_prism" },
            { 346, "macro_ttc_pendulum" },
            { 347, "macro_ttc_large_treadmill" },
            { 348, "macro_ttc_small_treadmill" },
            { 349, "macro_ttc_push_block" },
            { 350, "macro_ttc_rotating_hexagon" },
            { 351, "macro_ttc_rotating_triangle" },
            { 352, "macro_ttc_pit_block" },
            { 353, "macro_ttc_pit_block_2" },
            { 354, "macro_ttc_elevator_platform" },
            { 355, "macro_ttc_clock_hand" },
            { 356, "macro_ttc_spinner" },
            { 357, "macro_ttc_small_gear" },
            { 358, "macro_ttc_large_gear" },
            { 359, "macro_ttc_large_treadmill_2" },
            { 360, "macro_ttc_small_treadmill_2" },
            { 361, "macro_empty_330" },
            { 362, "macro_empty_331" },
            { 363, "macro_empty_332" },
            { 364, "macro_empty_333" },
            { 365, "macro_empty_334" },
            { 366, "macro_empty_335" },
            { 367, "macro_empty_336" },
            { 368, "macro_empty_337" },
            { 369, "macro_empty_338" },
            { 370, "macro_box_star_2" },
            { 371, "macro_box_star_3" },
            { 372, "macro_box_star_4" },
            { 373, "macro_box_star_5" },
            { 374, "macro_box_star_6" },
            { 375, "macro_empty_344" },
            { 376, "macro_empty_345" },
            { 377, "macro_empty_346" },
            { 378, "macro_empty_347" },
            { 379, "macro_empty_348" },
            { 380, "macro_empty_349" },
            { 381, "macro_bits_sliding_platform" },
            { 382, "macro_bits_twin_sliding_platforms" },
            { 383, "macro_bits_unknown_352" },
            { 384, "macro_bits_octagonal_platform" },
            { 385, "macro_bits_staircase" },
            { 386, "macro_empty_355" },
            { 387, "macro_empty_356" },
            { 388, "macro_bits_ferris_wheel_axle" },
            { 389, "macro_bits_arrow_platform" },
            { 390, "macro_bits_seesaw_platform" },
            { 391, "macro_bits_tilting_w_platform" },
            { 392, "macro_empty_361" },
            { 393, "macro_empty_362" },
            { 394, "macro_empty_363" },
            { 395, "macro_empty_364" },
            { 396, "macro_empty_365" }
        };

        public static Dictionary<int, GeoCommands.GeoCommand> GeoCmds = new()
        {
            { 0x00, GeoCommands.BranchAndLink },
            { 0x01, GeoCommands.End },
            { 0x02, GeoCommands.Branch },
            { 0x03, GeoCommands.Return },
            { 0x04, GeoCommands.OpenNode },
            { 0x05, GeoCommands.CloseNode },
            { 0x06, GeoCommands.AssignAsView },
            { 0x07, GeoCommands.UpdateNodeFlags },
            { 0x08, GeoCommands.NodeScreenArea },
            { 0x09, GeoCommands.NodeOrtho },
            { 0x0A, GeoCommands.CameraFrustum },
            { 0x0B, GeoCommands.NodeStart },
            { 0x0C, GeoCommands.ZBuffer },
            { 0x0D, GeoCommands.RenderRange },
            { 0x0E, GeoCommands.SwitchCase },
            { 0x0F, GeoCommands.Camera },
            { 0x10, GeoCommands.TranslateRotate },
            { 0x11, GeoCommands.TranslateNode },
            { 0x12, GeoCommands.RotationNode },
            { 0x13, GeoCommands.AnimatedPart },
            { 0x14, GeoCommands.BillboardWithParams },
            { 0x15, GeoCommands.DisplayList },
            { 0x16, GeoCommands.Shadow },
            { 0x17, GeoCommands.RenderObj },
            { 0x18, GeoCommands.Asm },
            { 0x19, GeoCommands.Background },
            { 0x1A, GeoCommands.Nop1A },
            { 0x1C, GeoCommands.HeldObject },
            { 0x1D, GeoCommands.Scale },
            { 0x1E, GeoCommands.Nop1E },
            { 0x1F, GeoCommands.Nop1F },
            { 0x20, GeoCommands.CullingRadius },
        };

        // Addresses of banks for each specific level, just using RM start addr
        public static Dictionary<uint, string> LevelSpecificBanks = new()
        {
            { 0x00DB1610, "bbh" },
            { 0x00DE0460, "ccm" },
            { 0x00E0BC10, "castle_inside" },
            { 0x00E8CD30, "hmc" },
            { 0x00EC06A0, "ssl" },
            { 0x00EF0F50, "bob" },
            { 0x00F0A720, "sl" },
            { 0x00F221B0, "wdw" },
            { 0x00F42940, "jrb" },
            { 0x00F5BCF0, "thi" },
            { 0x00F720B0, "ttc" },
            { 0x00F90AD0, "rr" },
            { 0x00FC7950, "castle_grounds" },
            { 0x00FE11D0, "bitdw" },
            { 0x00FF9000, "vcutm" },
            { 0x0100BCD0, "bitfs" },
            { 0x01034C10, "bits" },
            { 0x01058410, "lll" },
            { 0x01088CE0, "ddd" },
            { 0x010A09F0, "wf" },
            { 0x010E9B60, "castle_courtyard" },
            { 0x01125A30, "totwc" },
            { 0x0115C680, "bowser_2" },
            { 0x01166220, "bowser_3" },
            { 0x011732E0, "ttm" }
        };

        // All skyboxes are in bank 0xA
        // In cmd, it goes:
        // LOAD_MIO0(0xA, str+SegmentRomStart,str+SegmentRomEnd)
        public static Dictionary<uint, string> SkyboxesRM = new()
        {
            { 0xB35770, "_water_skybox_mio0" },
            { 0xB5D8B0, "_ccm_skybox_mio0" },
            { 0xBEADB0, "_clouds_skybox_mio0" },
            { 0xBA2330, "_bitfs_skybox_mio0" },
            { 0xBC2C70, "_wdw_skybox_mio0" },
            { 0xB859F0, "_cloud_floor_skybox_mio0" },
            { 0xC12EF0, "_ssl_skybox_mio0" },
            { 0xC3B030, "_bbh_skybox_mio0" },
            { 0xC57970, "_bidw_skybox_mio0" },
            { 0xC7FAB0, "_bits_skybox_mio0" }
        };

        public static Dictionary<uint, string> SkyboxesEditor = new()
        {
            { 0xB35715, "_water_skybox_mio0" },
            { 0xB5D855, "_ccm_skybox_mio0" },
            { 0xBEAD55, "_cloud_floor_skybox_mio0" },
            { 0xBA22D5, "_bitfs_skybox_mio0" },
            { 0xBC2C15, "_wdw_skybox_mio0" },
            { 0xB85995, "_clouds_skybox_mio0" },
            { 0xC12E95, "_ssl_skybox_mio0" },
            { 0xC3AFD5, "_bbh_skybox_mio0" },
            { 0xC57915, "_bidw_skybox_mio0" },
            { 0xC7FA55, "_bits_skybox_mio0" }
        };

        // Name of actor group, bank gfx is in, bank geo is in
        // for gfx it goes:
        // LOAD_MIO0(bank,'_'+str+'_mio0SegmentRomStart',same w/ end)
        // for geo it goes:
        // LOAD_RAW(bank,'_'+str+'_geoSegmentRomStart',same w/ end)
        // I will identify which are used by geo bank starts
        // the last member is the global scripts to include after loading
        // the bank
        public static Dictionary<uint, dynamic[]> Groups = new()
        {
            { 0x1279B0, new dynamic[] { "_group0", 4, 17,"script_func_global_2" } }, // Mario Bank 4/17 which is always loaded
            { 0x132850, new dynamic[] { "_group1", 5, 12, "script_func_global_2" } },
            { 0x134a70, new dynamic[] { "_group2", 5, 12, "script_func_global_3" } },
            { 0x13B5D0, new dynamic[] { "_group3", 5, 12, "script_func_global_4" } },
            { 0x145C10, new dynamic[] { "_group4", 5, 12, "script_func_global_5" } },
            { 0x151B70, new dynamic[] { "_group5", 5, 12, "script_func_global_6" } },
            { 0x1602E0, new dynamic[] { "_group6", 5, 12, "script_func_global_7" } },
            { 0x1656E0, new dynamic[] { "_group7", 5, 12, "script_func_global_8" } },
            { 0x166BD0, new dynamic[] { "_group8", 5, 12, "script_func_global_9" } },
            { 0x16D5C0, new dynamic[] { "_group9", 5, 12, "script_func_global_10" } },
            { 0x180540, new dynamic[] { "_group10", 5, 12, "script_func_global_11" } },
            { 0x187FA0, new dynamic[] { "_group11", 5, 12, "script_func_global_12" } },
            { 0x1B9070, new dynamic[] { "_group12", 6, 13, "script_func_global_13" } },
            { 0x1C3DB0, new dynamic[] { "_group13", 6, 13, "script_func_global_14" } },
            { 0x1D7C90, new dynamic[] { "_group14", 6, 13, "script_func_global_15" } },
            { 0x1E4BF0, new dynamic[] { "_group15", 6, 13, "script_func_global_16" } },
            { 0x1E7D90, new dynamic[] { "_group16", 6, 13, "script_func_global_17" } },
            { 0x1F1B30, new dynamic[] { "_group17", 6, 13, "script_func_global_18" } },
            { 0x2008D0, new dynamic[] { "_common0", 8, 15, "script_func_global_1" } },
            { 0x218DA0, new dynamic[] { "_common1", 3, 16, "script_func_global_1" } } // Bank 3/16, which is always loaded, so the extra stuff is pointless.
        };

        public static string[] Group_Models = new string[]
        {
            "LOAD_MODEL_FROM_GEO(MODEL_MARIO,                   mario_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_SMOKE,                   smoke_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_SPARKLES,                sparkles_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BUBBLE,                  bubble_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_SMALL_WATER_SPLASH,      small_water_splash_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_IDLE_WATER_WAVE,         idle_water_wave_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_WATER_SPLASH,            water_splash_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_WAVE_TRAIL,              wave_trail_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_YELLOW_COIN,             yellow_coin_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_STAR,                    star_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_TRANSPARENT_STAR,        transparent_star_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_WOODEN_SIGNPOST,         wooden_signpost_geo)",
            "LOAD_MODEL_FROM_DL( MODEL_WHITE_PARTICLE_SMALL,    white_particle_small_dl,     LAYER_ALPHA)",
            "LOAD_MODEL_FROM_GEO(MODEL_RED_FLAME,               red_flame_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BLUE_FLAME,              blue_flame_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BURN_SMOKE,              burn_smoke_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_LEAVES,                  leaves_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_PURPLE_MARBLE,           purple_marble_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_FISH,                    fish_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_FISH_SHADOW,             fish_shadow_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_SPARKLES_ANIMATION,      sparkles_animation_geo)",
            "LOAD_MODEL_FROM_DL( MODEL_SAND_DUST,               sand_seg3_dl_0302BCD0,       LAYER_ALPHA)",
            "LOAD_MODEL_FROM_GEO(MODEL_BUTTERFLY,               butterfly_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BURN_SMOKE_UNUSED,       burn_smoke_geo)",
            "LOAD_MODEL_FROM_DL( MODEL_PEBBLE,                  pebble_seg3_dl_0301CB00,     LAYER_ALPHA)",
            "LOAD_MODEL_FROM_GEO(MODEL_MIST,                    mist_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_WHITE_PUFF,              white_puff_geo)",
            "LOAD_MODEL_FROM_DL( MODEL_WHITE_PARTICLE_DL,       white_particle_dl,           LAYER_ALPHA)",
            "LOAD_MODEL_FROM_GEO(MODEL_WHITE_PARTICLE,          white_particle_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_YELLOW_COIN_NO_SHADOW,   yellow_coin_no_shadow_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BLUE_COIN,               blue_coin_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BLUE_COIN_NO_SHADOW,     blue_coin_no_shadow_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_MARIOS_WINGED_METAL_CAP, marios_winged_metal_cap_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_MARIOS_METAL_CAP,        marios_metal_cap_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_MARIOS_WING_CAP,         marios_wing_cap_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_MARIOS_CAP,              marios_cap_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_MARIOS_CAP,              marios_cap_geo)", // repeated
			"LOAD_MODEL_FROM_GEO(MODEL_BOWSER_KEY_CUTSCENE,     bowser_key_cutscene_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BOWSER_KEY,              bowser_key_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_RED_FLAME_SHADOW,        red_flame_shadow_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_1UP,                     mushroom_1up_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_RED_COIN,                red_coin_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_RED_COIN_NO_SHADOW,      red_coin_no_shadow_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_NUMBER,                  number_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_EXPLOSION,               explosion_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_DIRT_ANIMATION,          dirt_animation_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_CARTOON_STAR,            cartoon_star_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BLUE_COIN_SWITCH,        blue_coin_switch_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_AMP,                     amp_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_PURPLE_SWITCH,           purple_switch_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_CHECKERBOARD_PLATFORM,   checkerboard_platform_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BREAKABLE_BOX,           breakable_box_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BREAKABLE_BOX_SMALL,     breakable_box_small_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_EXCLAMATION_BOX_OUTLINE, exclamation_box_outline_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_EXCLAMATION_BOX,         exclamation_box_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_GOOMBA,                  goomba_geo)",
            "LOAD_MODEL_FROM_DL( MODEL_EXCLAMATION_POINT,       exclamation_box_outline_seg8_dl_08025F08, LAYER_ALPHA)",
            "LOAD_MODEL_FROM_GEO(87,              springboard_bottom_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_KOOPA_SHELL,             koopa_shell_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_METAL_BOX,               metal_box_geo)",
            "LOAD_MODEL_FROM_DL( MODEL_METAL_BOX_DL,            metal_box_dl,                             LAYER_OPAQUE)",
            "LOAD_MODEL_FROM_GEO(MODEL_BLACK_BOBOMB,            black_bobomb_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BOBOMB_BUDDY,            bobomb_buddy_geo)",
            "LOAD_MODEL_FROM_DL( MODEL_DL_CANNON_LID,           cannon_lid_seg8_dl_080048E0,              LAYER_OPAQUE)",
            "LOAD_MODEL_FROM_GEO(MODEL_BOWLING_BALL,            bowling_ball_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_CANNON_BARREL,           cannon_barrel_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_CANNON_BASE,             cannon_base_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_HEART,                   heart_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_FLYGUY,                  flyguy_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_CHUCKYA,                 chuckya_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_TRAJECTORY_MARKER_BALL,      bowling_ball_track_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BULLET_BILL,             bullet_bill_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_YELLOW_SPHERE,           yellow_sphere_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_HOOT,                    hoot_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_YOSHI_EGG,               yoshi_egg_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_THWOMP,                  thwomp_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_HEAVE_HO,                heave_ho_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BLARGG,                  blargg_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BULLY,                   bully_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BULLY_BOSS,              bully_boss_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_WATER_BOMB,              water_bomb_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_WATER_BOMB_SHADOW,       water_bomb_shadow_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_KING_BOBOMB,             king_bobomb_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_MANTA_RAY,               manta_seg5_geo_05008D14)",
            "LOAD_MODEL_FROM_GEO(MODEL_UNAGI,                   unagi_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_SUSHI,                   sushi_geo)",
            "LOAD_MODEL_FROM_DL( MODEL_DL_WHIRLPOOL,            whirlpool_seg5_dl_05013CB8, LAYER_TRANSPARENT)",
            "LOAD_MODEL_FROM_GEO(MODEL_CLAM_SHELL,              clam_shell_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_POKEY_HEAD,              pokey_head_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_POKEY_BODY_PART,         pokey_body_part_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_TWEESTER,                tweester_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_KLEPTO,                  klepto_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_EYEROK_LEFT_HAND,        eyerok_left_hand_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_EYEROK_RIGHT_HAND,       eyerok_right_hand_geo)",
            "LOAD_MODEL_FROM_DL( MODEL_DL_MONTY_MOLE_HOLE,      monty_mole_hole_seg5_dl_05000840, LAYER_TRANSPARENT_DECAL)",
            "LOAD_MODEL_FROM_GEO(MODEL_MONTY_MOLE,              monty_mole_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_UKIKI,                   ukiki_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_FWOOSH,                  fwoosh_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_SPINDRIFT,               spindrift_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_MR_BLIZZARD_HIDDEN,      mr_blizzard_hidden_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_MR_BLIZZARD,             mr_blizzard_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_PENGUIN,                 penguin_geo)",
            "LOAD_MODEL_FROM_DL( MODEL_CAP_SWITCH_EXCLAMATION,  cap_switch_exclamation_seg5_dl_05002E00, LAYER_ALPHA)",
            "LOAD_MODEL_FROM_GEO(MODEL_CAP_SWITCH,              cap_switch_geo)",
            "LOAD_MODEL_FROM_DL( MODEL_CAP_SWITCH_BASE,         cap_switch_base_seg5_dl_05003120,        LAYER_OPAQUE)",
            "LOAD_MODEL_FROM_GEO(MODEL_BOO,                     boo_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BETA_BOO_KEY,               small_key_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_HAUNTED_CHAIR,           haunted_chair_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_MAD_PIANO,               mad_piano_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BOOKEND_PART,            bookend_part_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BOOKEND,                 bookend_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_HAUNTED_CAGE,            haunted_cage_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BIRDS,                   birds_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_PEACH,                   peach_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_YOSHI,                   yoshi_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_ENEMY_LAKITU,            enemy_lakitu_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_SPINY_BALL,              spiny_ball_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_SPINY,                   spiny_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_WIGGLER_HEAD,            wiggler_head_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_WIGGLER_BODY,            wiggler_body_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BUBBA,                   bubba_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BOWSER,                  bowser_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BOWSER_BOMB_CHILD_OBJ,   bowser_bomb_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BOWSER_BOMB,             bowser_bomb_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BOWSER_SMOKE,            bowser_impact_smoke_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BOWSER_FLAMES,           bowser_flames_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BOWSER_WAVE,             invisible_bowser_accessory_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BOWSER2,                 bowser2_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BUB,                     bub_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_TREASURE_CHEST_BASE,     treasure_chest_base_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_TREASURE_CHEST_LID,      treasure_chest_lid_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_CYAN_FISH,               cyan_fish_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_WATER_RING,              water_ring_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_WATER_MINE,              water_mine_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_SEAWEED,                 seaweed_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_SKEETER,                 skeeter_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_PIRANHA_PLANT,           piranha_plant_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_WHOMP,                   whomp_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_KOOPA_WITH_SHELL,        koopa_with_shell_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_KOOPA_WITHOUT_SHELL,     koopa_without_shell_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_METALLIC_BALL,           metallic_ball_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_CHAIN_CHOMP,             chain_chomp_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_KOOPA_FLAG,              koopa_flag_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_WOODEN_POST,             wooden_post_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_MIPS,                    mips_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BOO_CASTLE,              boo_castle_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_LAKITU,                  lakitu_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_TOAD,                    toad_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_CHILL_BULLY,             chilly_chief_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_BIG_CHILL_BULLY,         chilly_chief_big_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_MONEYBAG,                moneybag_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_SWOOP,                   swoop_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_SCUTTLEBUG,              scuttlebug_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_MR_I_IRIS,               mr_i_iris_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_MR_I,                    mr_i_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_DORRIE,                  dorrie_geo)",
            "LOAD_MODEL_FROM_GEO(MODEL_SNUFIT,                  snufit_geo)"
        };

        // Specifically for detecting MOP Models, basically links model loads (ID+addr to a label).
        public static Dictionary<(int, int), string> MOPModels = new()
        {
            { (240, 50472748),  "FlipBlock_MOP" },
            { (47, 6265536),  "Flipswap_Platform_MOP" },
            { (0x30, 0x5f8560),  "Flipswap_Platform_Border_MOP" },
            { (42, 6266848),  "Flipswitch_Panel_MOP" },
            { (43, 6281392),  "Green_Switchboard_MOP" },
            { (0x2C, 0x600460),  "Green_Switchboard_Gears_MOP" },
            { (45, 6305392),  "Moving_Rotating_Block_MOP" },
            { (46, 6317664),  "Checkpoint_Flag_MOP" },
            { (0, 6317664),  "Checkpoint_Flag_MOP" },
            { (123, 50453496),  "Noteblock_MOP" },
            { (207, 251659468),  "PSwitch_MOP" },
            { (153, 50472420),  "SandBlock_MOP" },
            { (155, 251661020),  "Shell_1_MOP" },
            { (157, 251661064),  "Shell_2_MOP" },
            { (152, 50467572),  "Shrink_Platform_MOP" },
            { (0x97, 0x3020860),  "Shrink_Platform_Border_MOP" },
            { (146, 50461848),  "Spring_MOP" },
            { (242, 50472712),  "Switchblock_Switch_MOP" },
            { (241, 50472660),  "Switchblock_MOP" },
            { (84, 201327140),  "Beta_Blarrg_MOP" }
        };

        // Cols that aren't loaded via behaviors. This is ruined by editor ofc
        public static Dictionary<string, uint> TrackHardcodedCols = new() {
            { "rr_seg7_collision_07029038", 0xED9CC },
            { "ccm_seg7_collision_070163F8", 0xED9D0 },
            { "checkerboard_platform_seg8_collision_0800D710", 0xED9D4 },
            { "bitfs_seg7_collision_070157E0", 0xED9D8 },
        };

        // Seg2 glyphs have holes in them because they're left out in NA.
        // This is a list of glyphs to 'skip' which means increase name by 0x200
        public static Dictionary<uint, int> Seg2Glyphs = new()
        {
            { 0x2600, 0x200 },
            { 0x3200, 0x200 },
            { 0x3A00, 0x200 },
            { 0x3C00, 0x200 },
            { 0x3E00, 0x200 },
            { 0x4200, 0xA00 }
        };

        // [loc, name, size, len]
        public static List<Segment2WarpTransition> Seg2WarpTrans = new()
        {
            new(0x122B8, "0F458", (32, 64), 0x800),
            new(0x12AB8, "0FC58", (32, 64), 0x800),
            new(0x132B8, "10458", (64, 64), 0x1000),
            new(0x142B8, "11458", (32, 64), 0x800)
        };

        public static Dictionary<byte, string> Soundbanks = new()
        {
            { 0, "00" },
            { 1, "01_terrain" },
            { 2, "02_water" },
            { 3, "03" },
            { 4, "04" },
            { 5, "05" },
            { 6, "06" },
            { 7, "07" },
            { 8, "08_mario" },
            { 9, "09" },
            { 10, "0A_mario_peach" },
            { 11, "0B" },
            { 12, "0C" },
            { 13, "0D" },
            { 14, "0E" },
            { 15, "0F" },
            { 16, "10" },
            { 17, "11" },
            { 18, "12" },
            { 19, "13" },
            { 20, "14_piranha_music_box" },
            { 21, "15" },
            { 22, "16_course_start" },
            { 23, "17" },
            { 24, "18" },
            { 25, "19" },
            { 26, "1A" },
            { 27, "1B" },
            { 28, "1C_endless_stairs" },
            { 29, "1D_bowser_organ" },
            { 30, "1E" },
            { 31, "1F" },
            { 32, "20" },
            { 33, "21" },
            { 34, "22" },
            { 35, "23" },
            { 36, "24" },
            { 37, "25" }
        };
    }
}
